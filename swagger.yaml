openapi: 3.0.0
info:
    title: jobs-API
    contact: {}
    version: "1.0"
servers:
    - url: https://jobs-api--v1.herokuapp.com/api/v1
      variables: {}
paths:
    /jobs:
        get:
            tags:
                - Jobs
            summary: Get All Jobs
            operationId: GetAllJobs
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
        post:
            tags:
                - Jobs
            summary: Create Job
            operationId: CreateJob
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateJobRequest"
                        example:
                            company: google
                            position: full-stack-developer
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /jobs/{id}:
        parameters:
            - in: path
              name: id
              schema:
                  type: string
              required: true
              description: The job ID
        get:
            tags:
                - Jobs
            summary: Get Single Job
            operationId: GetSingleJob
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
        patch:
            tags:
                - Jobs
            summary: Update Job
            operationId: UpdateJob
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateJobRequest"
                        example:
                            company: uber
                            position: back-end-developer
                            status: "declined"
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
        delete:
            tags:
                - Jobs
            summary: Delete Job
            operationId: DeleteJob
            parameters: []
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security:
                - bearer: []
    /auth/login:
        post:
            tags:
                - Auth
            summary: Login User
            operationId: LoginUser
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/LoginRequest"
                        example:
                            email: alex@gmail.com
                            password: secret
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security: []
    /auth/register:
        post:
            tags:
                - Auth
            summary: Register User
            operationId: RegisterUser
            parameters: []
            requestBody:
                description: ""
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/RegisterRequest"
                        example:
                            name: alex
                            email: alex@gmail.com
                            password: secret
                required: true
            responses:
                "200":
                    description: ""
                    headers: {}
            deprecated: false
            security: []
components:
    schemas:
        LoginRequest:
            title: LoginRequest
            required:
                - email
                - password
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
            example:
                email: anna@gmail.com
                password: secret
        RegisterRequest:
            title: RegisterRequest
            required:
                - name
                - email
                - password
            type: object
            properties:
                name:
                    type: string
                email:
                    type: string
                password:
                    type: string
            example:
                name: alex
                email: alex@gmail.com
                password: secret
        CreateJobRequest:
            title: CreateJobRequest
            required:
                - company
                - position
            type: object
            properties:
                company:
                    type: string
                position:
                    type: string
            example:
                company: google
                position: full-stack-developer
        UpdateJobRequest:
            title: UpdateJobRequest
            required:
                - company
                - position
                - status
            type: object
            properties:
                company:
                    type: string
                position:
                    type: string
            example:
                company: uber
                position: back-end-developer
    securitySchemes:
        bearer:
            type: http
            scheme: bearer
security: []
tags:
    - name: Auth
      description: ""
    - name: Jobs
      description: ""
